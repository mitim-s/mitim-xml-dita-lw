/*!
 * Filename: common_xml_schema.js
 * License: MIT License - https://opensource.org/licenses/MIT
 * Copyright (c) 2025 MITIM Professional Services DOO
 * JSON Schema. 2020-12 Release
 * Generated by the MITIM XML Editor, version: 1.3.111
 */

export const id_pattern = '^[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][-.0-9A-Z_a-z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]*$';
export const ids_pattern = '^[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][-.0-9A-Z_a-z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]*(( )*[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][-.0-9A-Z_a-z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]*)*$';
export const token_pattern = '^[-.:_0-9A-Z_a-z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]*$';
export const lang_pattern = '^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$'

export const a = "array";
export const s = "string";
export const o = "object";
export const n = "number";
export const b = "boolean";

export const ts = {
    "type": s
}

export const ap = {
    "additionalProperties": false
}

export const a_integer = {
    "type": 'integer'
}

export const a_long = {
    "type": n,
    "minimum": -9223372036854775808,
    "maximum": 9223372036854775807,
    "exclusiveMinimum": false,
    "exclusiveMaximum": false
}

export const a_posInt = {
    "type": n,
    "minimum": 1
}

export const a_nonNegInt = {
    "type": n,
    "minimum": 0
}

export const a_id = {
    "pattern": id_pattern,
    "type": s
}
export const a_entity = {
    "pattern": id_pattern,
    "type": s
}

export const a_idref = {
    "pattern": id_pattern,
    "type": s
}
    
export const a_idrefs = {
    "pattern": ids_pattern,
    "type": s
}

export const a_nmt = {
    "pattern": token_pattern,
    "type": s
}

export const a_nmts = {
    "type": 'array',
    "items": {
        'type': s,
        'pattern': token_pattern
    }
}

export const a_date = {
    "type": 'string',
    "pattern": '^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$'
}

export const a_year = {
    'type': 'string',
    'pattern': '^(19|20)\\d\\d$'
}

export const a_decimal = {
    "type": n
}

export const mxd = {
    "type": [
        s,
        n,
        b
    ]
}

export const xml_space = {
    "enum": [
        "default",
        "preserve"
    ],
    "pattern": id_pattern,
    "type": s
}

export const xml_lng = {
    "anyOf": [
        {
            "pattern": lang_pattern,
            "type": s
        },
        {
            "enum": [
                ""
            ],
            "type": s
        }
    ]
}


